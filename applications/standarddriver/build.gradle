plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'in.10h.java.springaurorafailover'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {


	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework:spring-aspects'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

	implementation(platform("software.amazon.awssdk:bom:2.26.21"))
	implementation 'software.amazon.awssdk:rds'
	implementation 'software.amazon.jdbc:aws-advanced-jdbc-wrapper:2.3.7'

	implementation(platform("io.opentelemetry:opentelemetry-bom:1.32.0"))
	implementation("io.opentelemetry:opentelemetry-api")
	implementation("io.opentelemetry:opentelemetry-exporter-otlp")
	implementation("io.opentelemetry:opentelemetry-sdk")
	implementation("io.opentelemetry:opentelemetry-extension-aws")
	implementation("io.opentelemetry:opentelemetry-sdk-extension-aws")
	implementation("io.opentelemetry.contrib:opentelemetry-aws-xray-propagator:1.37.0-alpha")
	implementation("io.opentelemetry.contrib:opentelemetry-aws-xray:1.32.0")

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
//	implementation 'io.micrometer:micrometer-registry-prometheus:1.13.2'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	testRuntimeOnly 'com.h2database:h2'
	testImplementation 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootBuildImage') {
	imageName.set("129008548655.dkr.ecr.ap-northeast-1.amazonaws.com/github.com/10hin/spring-aurora-failover/standarddriver:latest")
}
